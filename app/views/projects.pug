extends layout

block head
	<link rel='stylesheet' href='/stylesheets/datatables/datatables.css' />

block header
	header.bg-header
		div.title
			h1 Projects
			div
				a.button(href="/setup-project") <i class="fa fa-plus-circle"></i>New project
		canvas#background(height="120px" width="1920")

block sidenav

	nav#sidenav.sidenav-project
		ul
			li#li-search-projects
				span
					label(for="projects-search") <i class="fa fa-search"></i>Search projects
					input(id="projects-search" placeholder="Search...")

			li#li-filter-projects
				span
					label(for="projects-filter") <i class="fa fa-filter"></i>Project creator
					select(id="projects-filter")
						option(value="") Anyone
						option(value="Your projects") Your projects
						option(value="Projects you've joined") Joined projects
						option(value="Global projects") Global projects
			li#li-sort-projects
				span
					label(for="projects-sort") <i class="fa fa-sort-amount-desc"></i>Sort projects
					select(id="projects-sort")
						option(value="0" selected) Project name
						option(value="1") # Annotators
						option(value="2") Progress
						option(value="4") Date created

			//- li#li-sort-projects
			//- 	span
			//- 		label(for="projects-sort") <i class="fa fa-sort"></i>Sort projects
			//- 		select
			//- 			option Most recent
			//- 			option Title
			//- 			option # Annotators
			//- 			option Progress
			//- 			option Documents
			li#li-projects-display
				span
					label(for="projects-display") <i class="fa fa-align-justify"></i>Display
					select(id="projects-display")
						option(value="detailed") Detailed view
						option(value="list") List view

block content




	div#dashboard
		article#project-details.article-heading.pad-header

			table#projects-table.detailed-view


			if false
				div.pad
					each proj in projects
						a.dashboard-hover(href="projects/" + proj._id + "/tagging")
							table.dashboard-project
								thead
									tr
										th(colspan="3")
											=proj.project_name						
								tbody
									tr
										td(colspan="3")
											table
												thead 
													tr 
														th 
															span Description 
														th 
															span # Annotators 
														th 
															span Progress 
												tbody 
													tr
														td 	<span class="desc">#{proj.project_description || "(No description)"}</span>
														td 	#{proj.user_ids.length}
														td  <span class="progress-bar"><span class="inner" data-width="30%">&nbsp;&nbsp;<span class="done"></span>/<span class="total"></span></span>
													tr 
														td(colspan="3")
															ul.metadata 
																li Filename: #{proj.file_metadata.Filename}
																li Number of documents: <span class="num-docs">#{proj.file_metadata['Number of documents']}</span>
																li Number of tokens: #{proj.file_metadata["Number of tokens"]}
																li Average tokens/document: #{proj.file_metadata["Average tokens/document"]}


									
block scripts

	script(src="/javascripts/datatables/datatables.min.js")
	script(src="/javascripts/lipsumBG.js")



	script.
		//$(document).ready(function() {



		$(document).ready(function() {


			var sortedBy = "";
			var sortOrder = "";

			// Updates the 'sorted by' field in the group rows.
			function updateSortedBy() {
				console.log($("#projects-sort :selected").text());
				sortedBy  = $("#projects-sort :selected").text();
				sortOrder = "Ascending";
			}




			updateSortedBy();

		    var dataTable = $('#projects-table').DataTable( {
		        "ajax": {
		        	"url": "projects/getprojects",
		        	"dataSrc": "projects"
		        },
		        "columnDefs": [
		        	{"title": "Name", "targets": 0, "width": "35%", "type": "html",
		        	 "render": function (data, type, row) {
						if ( type === "sort" || type === 'type' || type === "search" ) { // Ensure it sorts in the correct order.
							return data;
						}
		        	 	return '<a href="/projects/' + row['_id'] + '/tagging">' + data + "</a>";
		        	 }
		        	},
		        	{"title": "Annotators", "targets": 1, "width": "15%", "className": "dt-center", "type": "html",
		        	 "render": function (data, type, row) {
						if ( type === "sort" || type === 'type' || type === "search" ) { // Ensure it sorts in the correct order.
							return data;
						}
		        	 	return '<a href="/projects/' + row['_id'] + '/tagging"><span class="detailed-table"><span class="detailed-show"><em>\"' + row['project_description'] + '\"</em></span><span>' + data + ' annotator' + (data > 1 ? "s" : "") + "</span></span></a>";
		        	 }
		        	},
		        	{"title": "Progress", "targets": 2, "data": null, "width": "50%", "type": "html",
					 "render": function ( data, type, row ) {
						if ( type === "sort" || type === 'type' || type === "search" ) { // Ensure it sorts in the correct order.
							return data;
						}
					 	var nd = row["file_metadata"]["Number of documents"] * 3;
						return '<a href="/projects/' + row['_id'] + '/tagging">' +
							   '<span class="detailed-fullwidth">' +
							   '<span class="progress-bar"><span class="inner" style="width: ' + data + '%">' + data.toFixed(0) +'%</span></span></span>' +
							   '<span class="detailed-fullwidth detailed-show">' +
							   '<ul class="metadata">' +
							   '<li> Filename: ' + row["file_metadata"]["Filename"] + '</li>' +
							   '<li> Number of documents: ' + row["file_metadata"]["Number of documents"] + '</li>' +
							   '<li> Number of tokens: ' + row["file_metadata"]["Number of tokens"] + '</li>' +
							   '<li> Average tokens/document: ' + row["file_metadata"]["Average tokens/document"] + '</li>' +
							   '</ul></span>' +
							   '<span class="detailed-fullwidth detailed-show">' +
							   '<ul class="metadata" style="margin-bottom: 0px">' +
							   '<li>Created on ' + row["created_at"] + '</li></ul></span>'
							   '</a>';
						}
					},

		        ],
		        "columns": [
		            { "data": "project_name" },
		            { "data": "num_annotators" },
		            { "data": "percent_complete" },
		            { "data": "owner", "visible": false, "searchable": true},
		            { "data": "created_at", "visible": false, "sortable": true},
		        ],
		        "orderFixed": [3, 'desc'],
		        "rowGroup": {
		        	dataSrc: "owner",
		        	"startRender": function(rows, group) {
					  	return "" + group + ' <span class="sort-info">Sorted by <span class="sorted-by">' + sortedBy + '</span> <span class="sort-order">(' + sortOrder + ')</span></span>';
					}
		        }
		    } );


			$("#projects-search").on("keyup search input paste cut", function() {
			   dataTable.search(this.value).draw();
			});    

			$("#projects-display").on("change", function() {
				console.log($(this).val())
				if($(this).val() == "list")
					$("#projects-table").removeClass("detailed-view");
				else
					$("#projects-table").addClass("detailed-view");
			});

			$("#projects-filter").on("change", function() {
				var f = $(this).val();
				dataTable.column(3).search(f).draw();
			});

			$("#projects-sort").on("change", function() {
				var f = parseInt($(this).val());
				console.log(f);
				updateSortedBy();
				dataTable.order([ [ f, 'asc' ] ]).draw();
			});



			
		    $("#background").lipsumBG(false, false);
		} );


			//- function createTable() {

			//-     table = $('#project-table').DataTable( {
			//-         data: data,
		
			//-         //- "columns": [
			//-         //-     {
			//-         //-         "className":      'details-control',
			//-         //-         "orderable":      false,
			//-         //-         "data":           null,
			//-         //-         "defaultContent": ''
			//-         //-     },
			//-         //-     { title: " Why", "data": "project_name" },
			//-         //-     { "data": "description" },
			//-         //- ],
			//-         //"order": [[1, 'asc']]
			//-     } );
			//- }

			//- var data;
			//- $.ajax({
		 //-        type: 'GET',
		 //-        url: 'projects/getprojects',
		 //-        success: function(d) {
		 //-        	data = d.projects;
		 //-        	console.log(data)
		 //-        	createTable();
		 //-        }
		 //-    });


		//- });
		     

	script.
		$(document).ready(function() {
			$(".progress-bar .inner").each(function() {
				var total = parseInt($(this).closest("tbody").find(".num-docs").html()) * 3;
				var done = Math.floor(Math.random() * total);
				
				//console.log(total);
				//console.log($(this).find(".done"))
				//console.log($(this).find(".total"))
				$(this).find(".done").html(done);
				$(this).find(".total").html(total);
				$(this).css("width", (done/total*100) + "%");
			});
		});

