extends layout

block content

	section#setup-menu
		nav#sidenav

			ul.setup-stages#nav-setup-stages
				li#li-project-details 
					span 						
						| Project Details
						i.fa.fa-check
				li#li-upload-tokenized.not-yet-started
					span 
						i.fa.fa-check
						| Dataset
				li#li-entity-categories.not-yet-started
					span 
						i.fa.fa-check
						| Entity Categories
				li#li-distribution.not-yet-started
					span 
						i.fa.fa-check
						| Distribution
				li.not-yet-started
					span 
						i.fa.fa-check
						| Submission
		div#setup-questions
			article#project-details.article-heading
				h1 Project Details				
				div.form-section
					p Please enter the details of your project below.
					form#project-details-form
						input(type="hidden", name="_csrf", value="" + csrfToken)
						input(type="hidden", name="_id", value="" + wip_project_id)
						div#project-name-form.form-group
							label(for="input-project-name") Project Name (required)
							input(id="input-project-name" maxlength="100" placeholder="Project Name" autofocus required)
							div.form-help The name of the project.
						div#project-description-form.form-group
							label(for="input-project-description") Project Description (optional)
							input(id="input-project-description" maxlength="500" tabindex="-1" placeholder="Project Description")
							div.form-help A short description of the project.
						//div.submit-row
						//	input(type="submit" value="Next: Upload Dataset")
				div#saved-notification-project-details.saved-notification
					p <i class="fa fa-check"></i> This section has been saved.
						
			article#dataset.article-heading.not-scrolled-to
				h1 Dataset				
				div.form-section
					p Please upload your  data using the form below.
					p The dataset must be saved as a <code>.txt</code> file. Each token within your data must be separated by a space, and each document must be on a new line. <a href="/files/example_dataset.txt" download>Click here</a> to download a small example file.
					
					- var action = 'upload-tokenized'
					include partials/upload_widget

				div#saved-notification-upload-tokenized.saved-notification
					p <i class="fa fa-check"></i> This section has been saved.

			article#dataset.article-heading.not-scrolled-to
				h1 Entity Categories
				div.form-section
					p Please determine how you would prefer to list the entity categories (such as "Person" and "Organisation") in your data.
					blockquote
						a(id="entity-categories-list-button" class="subsection-open-button") I have a list of the entity classes present in my data.
					blockquote
						a(id="entity-categories-ner-button" class="subsection-open-button") I'm using the standard 4 class model for Named Entity Recognition.

					//- div#entity-categories-file.subsection.subsection-hidden
					//- 	h3 Entity categories from file
					//- 	div.pad
					//- 		p Please upload your entity categories using the form below.
					//- 		p The list of entity categories must be saved as a <code>.txt</code> file. Each line in the file must contain an entity category, followed by a tab character, followed by an abbreviated form of that entity (such as <code>PER</code> for "Person").
					//- 		p You may optionally add a tag colour by adding an additional tab character and a 6-digit hexadecimal colour code to the end of the line. This will determine the colour of the respective entity's label during annotation.
					//- 		p <a href="/files/example_categories.txt" download>Click here</a> to download a small example file.
							
					//- 		- var action = 'upload-categories'
					//- 		include partials/upload_widget
						

					div#entity-categories-list.subsection.subsection-hidden
						h3 List entity categories
						div.pad
							p Please enter your entity categories into the form below.
							p The "Abbreviation" will determine what is written in the output file after annotation, while the "Colour" will determine the colour of the tag during annotation.
							p Note: you can press Tab to jump to the next item in the form.

							form
								table.entity-categories-table
									thead
										tr
											th Category
											th Abbreviation
											th Colour
									tbody
										tr
											td
												input(id="ec-1")
											td
												input(id="ec-2")
											td
												input(id="ec-3")
										tr
											td
												input(id="ec-4")
											td
												input(id="ec-5")
											td
												input(id="ec-6")


			article#dataset.article-heading.not-scrolled-to
				h1 Distribution
				div.form-section
					p Please determine how you would like to distribute the annotation task.
					blockquote
						a(id="distribute-self-button" class="subsection-open-button") I'll annotate the data myself. I may invite other users to help annotate later.
					blockquote
						a(id="distribute-self-button" class="subsection-open-button") I have a list of the email addresses of people who will annotate my data.
				//- blockquote
				//-		a(id="distribute-self-codes-button" class="subsection-open-button") I'd like a list of codes that I will send to the annotators myself.
					blockquote
						a(id="distribute-email-button" class="subsection-open-button") I'd like the server to email codes to the annotators automatically.		



			//- article#dataset.article-heading.not-scrolled-to
			//- 	h1 Administrator Account
			//- 	div.form-section
			//- 		p In order to keep track of the annotation and to easily download the data that has been annotated, please provide a username and password below. This will provide you with the ability to log in to the application through the homepage.
			//- 		form
			//- 			div.form-group
			//- 				label(for="input-project-name") Username*
			//- 				input(id="input-project-name" placeholder="Username" autofocus required)
			//- 			div.form-group(style="margin-top: -20px")
			//- 				label(for="input-project-name") Password*
			//- 				input(id="input-project-name" type="password" placeholder="")


			article#dataset.article-heading.not-scrolled-to
				h1 Submission
				div.form-section
					p Once you have completed the form, please click the submit button below to set up the project.
					form
						div.submit-row
							input(type="submit" value="Submit and create project")

			div(style="height: 600px")



block scripts
	script.

		




		// Scroll to headings when clicking on nav
		$($("#nav-setup-stages").children()).on("click", function() {
			$('html, body').animate({scrollTop: $($(".article-heading")[$(this).index()]).offset().top - 100}, 500);
		});

		$(document).on('scroll', function() {

			$(".article-heading.scrolled-to").each(function() {

			    if($(document).scrollTop()<$(this).position().top - 250){
			    	
			    	$(this).addClass("not-scrolled-to")
			    	$(this).removeClass("scrolled-to")

			    	$($("#nav-setup-stages").children()[$(this).index() - 1]).removeClass("scrolled-past")
			    	$($("#nav-setup-stages").children()[$(this).index()]).addClass("not-yet-started")
			       
			    }			

			})

			$(".article-heading.not-scrolled-to").each(function() {
			    if($(document).scrollTop()>=$(this).position().top - 250){
			    	
			    	$(this).removeClass("not-scrolled-to")
			    	$(this).addClass("scrolled-to")

			    	$($("#nav-setup-stages").children()[$(this).index() - 1]).addClass("scrolled-past")
			    	$($("#nav-setup-stages").children()[$(this).index()]).removeClass("not-yet-started")
			       
			    }


			})


		})





		$("#entity-categories-list-button").on("click", function() {
			$("#entity-categories-list").slideDown(500)
			$("#entity-categories-ner").slideUp(500)
			$("#ec-1").focus();

			$("#entity-categories-ner-button").addClass("fade-out");			
			$("#entity-categories-list-button").removeClass("fade-out");
		});


		$("#entity-categories-ner-button").on("click", function() {
			$("#entity-categories-ner").slideDown(500)
			$("#entity-categories-list").slideUp(500)

			$("#entity-categories-list-button").addClass("fade-out");			
			$("#entity-categories-ner-button").removeClass("fade-out");
		});


		$("#already-tokenized-data-button").on("click", function() {
			$("#already-tokenized-data").slideDown(500)
			$("#untokenized-data").slideUp(500)

			$("#untokenized-data-button").addClass("fade-out");			
			$("#already-tokenized-data-button").removeClass("fade-out");
		});

		$("#untokenized-data-button").on("click", function() {
			$("#untokenized-data").slideDown(500)
			$("#already-tokenized-data").slideUp(500)

			$("#already-tokenized-data-button").addClass("fade-out");
			$("#untokenized-data-button").removeClass("fade-out");
		});

		/*$("#actually-already-tokenized-data-button").on("click", function() {
			$("#untokenized-data").addClass("subsection-hidden");
			$("#already-tokenized-data-button").removeClass("fade-out");
			$("#already-tokenized-data-button").click()			
		});

		$("#actually-untokenized-data-button").on("click", function() {
			$("#already-tokenized-data").addClass("subsection-hidden");
			$("#untokenized-data-button").removeClass("fade-out");
			$("#untokenized-data-button").click()			
		});*/
		


	


	script.

		'use strict';

		var MAX_FILESIZE = !{max_filesize_mb} * 1024 * 1024;
		var file_metadata = !{file_metadata};





		


		// Drag and drop code and css found here:
		// https://css-tricks.com/examples/DragAndDropFileUploading/
		;( function( $, window, document, undefined )
		{

			function uploadNameDesc() {
				var csrfToken   = $("#project-details-form").find( 'input[name="_csrf"]').val();
				var wippid      = $("#project-details-form").find( 'input[name="_id"]').val();



				var pn = $("#project-name-form input").val();
				var pd = $("#project-description-form input").val();
				var o = {
					"name": pn,
					"desc": pd
				}
				console.log(pn, pd, o)

				console.log("Saved");
				$.ajax(
				{
					url: 			'upload-namedesc',
					type:			'POST',
					data: 			o,
					dataType: 		"json",
					headers: { 'csrf-token': csrfToken, 'wippid' : wippid },
					complete: function()
					{
						//$form.removeClass( 'is-uploading' );
					},
					success: function( data )
					{
						console.log("done");
						if($("#project-name-form input").val().length > 0) {
							$("#saved-notification-project-details").addClass("show");
							$("#li-project-details").addClass("completed");
						}
					},
					error: function()
					{								
						alert( 'Error. Please, contact the webmaster!' );
					}
				});				

			}


			var existingProjName = "#{project_name}";
			var existingProjDesc = "#{project_desc}";
			if(existingProjName.length > 0) {
				$("#saved-notification-project-details").addClass("show");
				$("#li-project-details").addClass("completed");				
				$("#project-name-form input").val(existingProjName);
				$("#project-description-form").addClass("show");
				$("#project-description-form input").attr("tabindex", "0");
			}
			if(existingProjDesc.length > 0) {
				$("#project-description-form input").val(existingProjDesc);
			}


			// Project Name/Description
			var projnameTimeout;



			$("#input-project-name").on('keyup', function() {	// Show the description box after the user types something in the Project Name box.
				$("#saved-notification-project-details").removeClass("show");
				$("#li-project-details").removeClass("completed");
				if($(this).val().length > 0) {
					$("#project-description-form").addClass("show");
					$("#project-description-form input").attr("tabindex", "0");
				} else {
					$("#project-description-form").removeClass("show");
					$("#project-description-form input").attr("tabindex", "-1");
				}
				window.clearTimeout(projnameTimeout);
				projnameTimeout = window.setTimeout(uploadNameDesc, 1000);
			});

			$("#input-project-description").on('keyup', function() {
				$("#saved-notification-project-details").removeClass("show");
				$("#li-project-details").removeClass("completed");
				window.clearTimeout(projnameTimeout);
				projnameTimeout = window.setTimeout(uploadNameDesc, 1000);
			});








			function renderSuccessBox(metadata, form_ele, success_details_ele, sidenav_li_ele, saved_notification_ele) {
				form_ele.addClass( 'is-success' );
				console.log(success_details_ele)
				var details = "<table><tbody>";
				for(var i = 0; i < metadata.length; i++) {
					var k = Object.keys(metadata[i])[0];
					var v = metadata[i][k];
					details += "<tr><td><b>" + k + ":</b></td><td>" + v + "</td><tr/>";
				}
				details += "</tbody></table>"
				success_details_ele.html(details); // remove final <br/> tag.
				saved_notification_ele.addClass('show');
				sidenav_li_ele.addClass('completed');
			}

			if(file_metadata) renderSuccessBox(file_metadata, $("#form-upload-tokenized"), $("#form-upload-tokenized").find('.box__success_details'), $("#li-upload-tokenized"), $("#saved-notification-upload-tokenized"));



			// feature detection for drag&drop upload

			var isAdvancedUpload = function()
				{
					var div = document.createElement( 'div' );
					return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) && 'FormData' in window && 'FileReader' in window;
				}();


			// applying the effect for every form

			$( '.box' ).each( function()
			{
				var $form		 = $( this ),
					$input		 = $form.find( 'input[type="file"]' ),
					$label		 = $form.find( 'label' ),
					$errorMsg	 = $form.find( '.box__error span' ),
					$restart	 = $form.find( '.box__restart' ),
					$successDets = $form.find( '.box__success_details' ),
					$csrfToken   = $form.find( 'input[name="_csrf"]'),
					$wippid      = $form.find( 'input[name="_id"]'),
					$uploading   = $form.find( '.box__uploading'),
					droppedFile  = null,
					$savedNotif  = $("#saved-notification-"  + $form.attr( 'action' )),
					$sidenavLi   = $("#li-"  + $form.attr( 'action' )),
					showFiles	 = function( file )
					{
						$label.text( file.name );
					};

					var csrfToken = $csrfToken.val();					
					var wippid    = $wippid.val();

				function validateFile(file) {
					var a = checkFilesize(file);
					var b = checkFiletype(file);
					$sidenavLi.removeClass("completed");
					$savedNotif.removeClass("show");

					if(!(a && b)) {
						$form.addClass( 'is-uploading' ).removeClass( 'is-error' );

						var errMsg;
						if(!a) { errMsg = "File must be less than #{max_filesize_mb}mb in size." }
						if(!b) { errMsg = "File must be a plain text file (.txt)." }

						// Send a message to the server to delete the documents of the project if client-side validation failed.

						$.ajax(
						{
							url: 			$form.attr( 'action' ) + '-reset',
							type:			$form.attr( 'method' ),
							data: 			{},
							dataType:		'json',
							cache:			false,
							contentType:	false,
							processData:	false,
							headers: { 'csrf-token': csrfToken, 'wippid' : wippid },
							complete: function()
							{
								$form.removeClass( 'is-uploading' );
							},
							success: function( data )
							{
								$form.addClass('is-error');
								$errorMsg.text(errMsg);		
							},
							error: function()
							{								
								alert( 'Error. Please, contact the webmaster!' );
							}
						});
					}

					return a && b;
				}

				function checkFilesize(file) {
					if(file.size > MAX_FILESIZE) {
						return false;
					} else {
						return true;
					}
				}

				function checkFiletype(file) {
					if(file.type != "text/plain") {
						return false;									
					} else {
						return true;
					}
				}


				// letting the server side to know we are going to make an Ajax request
				$form.append( '<input type="hidden" name="ajax" value="1" />' );

				$input.on('click', function() {

					$(this).val("");
				});

				// automatically submit the form on file select
				$input.on( 'change', function( e )
				{	
					$form.removeClass( 'is-error is-success' );
					droppedFile = null; // Get rid of the dropped file the user may have dropped previously.
					if(validateFile(e.target.files[0])) {
						showFiles( e.target.files );					
						$form.trigger( 'submit' );
					}					
				});


				// drag&drop files if the feature is available
				if( isAdvancedUpload )
				{
					$form
					.addClass( 'has-advanced-upload' ) // letting the CSS part to know drag&drop is supported by the browser
					.on( 'drag dragstart dragend dragover dragenter dragleave drop', function( e )
					{	

						// preventing the unwanted behaviours
						e.preventDefault();
						e.stopPropagation();
					})
					.on( 'dragover dragenter', function() //
					{
						// Disable drop if form already completed.
						if( $form.hasClass("is-success") || $form.hasClass("is-uploading") ) {
							return;
						}

						$form.addClass( 'is-dragover' );
					})
					.on( 'dragleave dragend drop', function()
					{
						$form.removeClass( 'is-dragover' );
					})
					.on( 'drop', function( e )
					{

						// Disable drop if form already completed.
						if( $form.hasClass("is-success") || $form.hasClass("is-uploading") ) {							
							return;
						}

						var droppedFiles = e.originalEvent.dataTransfer.files; // the files that were dropped

						if(droppedFiles.length > 1) {							
							$form.addClass('is-error');
							$errorMsg.text("You may only upload 1 file at a time.");
						} else {
							droppedFile = droppedFiles[0];

							if(validateFile(droppedFile)) {
								console.log('file is fine')
								showFiles( droppedFile );						
								$form.trigger( 'submit' ); // automatically submit the form on file drop
							}					
						}					

						
					});
				}




				// if the form was submitted

		        var progressBar = $(this).find('.progress-bar-fill')
		        var progressBarContainer = $(this).find('.progress-bar-container')
		        var progressPercent = $(this).find('.progress-percent-complete')

				$form.on( 'submit', function( e )
				{				
					// preventing the duplicate submissions if the current one is in progress
					if( $form.hasClass( 'is-uploading' ) ) return false;
					progressBarContainer.removeClass("fade-out");
					

					$form.addClass( 'is-uploading' ).removeClass( 'is-error' );
					$uploading.html("<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Uploading…");

					if( isAdvancedUpload ) // ajax file upload for modern browsers
					{
						e.preventDefault();


						// gathering the form data
							
						console.log('g', $form.get(0))

						var ajaxData;
						if( droppedFile ) {
							ajaxData = new FormData();
							ajaxData.append( $input.attr("name"), droppedFile );	
						} else {
							ajaxData = new FormData( $form.get( 0 ) );						
						}

						console.log(ajaxData);
						
						

						var tokenizingTimeout;

						// ajax request
						$.ajax(
						{

							xhr: function() {
								var xhr = new window.XMLHttpRequest();

								xhr.upload.addEventListener("progress", function(evt) {
								  if (evt.lengthComputable) {
								    var percentComplete = evt.loaded / evt.total;
								    percentComplete = parseInt(percentComplete * 100);

								    progressBar.css("width", "" + percentComplete + "%")
								    progressPercent.html("" + percentComplete + "%")

								    if (percentComplete === 100) {
								    	$uploading.html("<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Tokenizing…");
								    	progressBarContainer.addClass("fade-out");
								    	window.setTimeout(function() {
								    		progressBar.css("width", "0%");
								    	}, 500);
								    	tokenizingTimeout = window.setTimeout(function() {
								    		console.log('heres johnny')
								    		$uploading.html("<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Tokenizing…<br/><span class=\"tokenization-time-info\">Tokenization is taking some time as your dataset is quite large.<br/>Please feel free to complete the rest of the form while tokenization is running.</span>");

								    	}, 2000);
								    }

								  }
								}, false);

								return xhr;
							},						
							url: 			$form.attr( 'action' ),
							type:			$form.attr( 'method' ),
							data: 			ajaxData,
							dataType:		'json',
							cache:			false,
							contentType:	false,
							processData:	false,
							headers: { 'csrf-token': csrfToken, 'wippid' : wippid },
							complete: function()
							{
								$form.removeClass( 'is-uploading' );
							},
							success: function( data )
							{
								window.clearTimeout(tokenizingTimeout);
								console.log(data);
								
								if( !data.success ) {
									$form.addClass( 'is-error' );
									$errorMsg.text( data.error );
								} else {
									renderSuccessBox(data.details, $form, $successDets, $sidenavLi, $savedNotif);
								}
							},
							error: function()
							{								
								alert( 'Error. Please, contact the webmaster!' );
							}
						});
					}
					else // fallback Ajax solution upload for older browsers
					{
						var iframeName	= 'uploadiframe' + new Date().getTime(),
							$iframe		= $( '<iframe name="' + iframeName + '" style="display: none;"></iframe>' );

						$( 'body' ).append( $iframe );
						$form.attr( 'target', iframeName );

						$iframe.one( 'load', function()
						{
							var data = $.parseJSON( $iframe.contents().find( 'body' ).text() );
							$form.removeClass( 'is-uploading' ).addClass( data.success == true ? 'is-success' : 'is-error' ).removeAttr( 'target' );
							if( !data.success ) $errorMsg.text( data.error );
							$iframe.remove();
						});
					}
				});


				// restart the form if has a state of error/success

				$restart.on( 'click', function( e )
				{
					e.preventDefault();
					$input.trigger( 'click' );
				});

				// Firefox focus bug fix for file input
				$input
				.on( 'focus', function(){ $input.addClass( 'has-focus' ); })
				.on( 'blur', function(){ $input.removeClass( 'has-focus' ); });
			});

		})( jQuery, window, document );
