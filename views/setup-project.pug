extends layout

block content

	section#setup-menu
		nav#sidenav

			ul.setup-stages#nav-setup-stages
				li 
					span 						
						| Project Details
						i.fa.fa-check
				li.not-yet-started
					span 
						i.fa.fa-check
						| Dataset
				li.not-yet-started
					span 
						i.fa.fa-check
						| Entity Categories
				li.not-yet-started
					span 
						i.fa.fa-check
						| Distribution
				li.not-yet-started
					span 
						i.fa.fa-check
						| Administrator Account
				li.not-yet-started
					span 
						i.fa.fa-check
						| Submission
		div#setup-questions
			article#project-details.article-heading
				h1 Project Details				
				div.form-section
					p Please enter the details of your project below.
					form
						div.form-group
							label(for="input-project-name") Project Name*
							input(id="input-project-name" placeholder="Project Name" autofocus required)
							div.form-help The name of the project.
						div.form-group
							label(for="input-project-name") Project Description
							input(id="input-project-name" placeholder="Project Description")
							div.form-help A short description of the project.
						//div.submit-row
						//	input(type="submit" value="Next: Upload Dataset")
				div.saved-notification
					p <i class="fa fa-check"></i> This section has been saved.
						
			article#dataset.article-heading.not-scrolled-to
				h1 Dataset				
				div.form-section
					h3 Already tokenized data				
					p Please upload your tokenized data using the form below.
					p The dataset must be saved as a <code>.txt</code> file. Each token within your data must be separated by a newline, and each record must be separated by an additional newline. <a href="/files/example_tokenized.txt" download>Click here</a> to download a small example file.
					
					div.upload-widget
						form.box(class="js" method='post', action='upload-tokenized', enctype='multipart/form-data', novalidate='')
							.box__input
								i.fa.fa-upload.upload-icon
								input#file1.box__file(type='file', name='files[]', data-multiple-caption='{count} files selected', multiple='')
								label(for='file1')
									strong Choose a file
									span.box__dragndrop  or drag it here
									| .
								button.box__button(type='submit') Upload
							.box__uploading Uploadingâ€¦
							.box__success
								| Your file was successfully uploaded.
							.box__error
								| Error! 
								span
								| . 
								a.box__restart(href='https://css-tricks.com/examples/DragAndDropFileUploading//?', role='button') Try again!
							.progress-bar-container
								.progress-bar
								.progress-bar-fill
								.progress-percent-complete


			article#dataset.article-heading.not-scrolled-to
				h1 Entity Categories
				div.form-section
					p Please determine how you would prefer to upload the entity categories (such as "Person" and "Organisation") in your data.
					blockquote
						a(id="entity-categories-file-button" class="subsection-open-button") My entity categories are saved in a file.
					blockquote
						a(id="entity-categories-list-button" class="subsection-open-button") I'll list the entity categories here.
					blockquote
						a(id="entity-categories-ner-button" class="subsection-open-button") I'm using the standard 4 class model for Named Entity Recognition.

					div#entity-categories-file.subsection.subsection-hidden
						h3 Entity categories from file
						div.pad
							p Please upload your entity categories using the form below.
							p The list of entity categories must be saved as a <code>.txt</code> file. Each line in the file must contain an entity category, followed by a tab character, followed by an abbreviated form of that entity (such as <code>PER</code> for "Person").
							p You may optionally add a tag colour by adding an additional tab character and a 6-digit hexadecimal colour code to the end of the line. This will determine the colour of the respective entity's label during annotation.
							p <a href="/files/example_categories.txt" download>Click here</a> to download a small example file.
							form
								div.form-group
									//label(for="input-tokenized-data").file-upload-label Tokenized data file
									//div.form-file-upload
									//	input(type="file" id="input-tokenized-data")
									//	input(type="submit" value="Upload")
						

					div#entity-categories-list.subsection.subsection-hidden
						h3 List entity categories
						div.pad
							p Please enter your entity categories into the table below.
							p The "Abbreviation" will determine what is written in the output file after annotation, while the "Colour" will determine the colour of the tag during annotation.

							form
								table.entity-categories-table
									thead
										tr
											th Category
											th Abbreviation
											th Colour
									tbody
										tr
											td
											td
											td
										tr
											td
											td
											td
										tr
											td
											td
											td

			article#dataset.article-heading.not-scrolled-to
				h1 Distribution
				div.form-section
					p Please determine how you would like to distribute the annotation task.
					blockquote
						a(id="distribute-self-button" class="subsection-open-button") I'll complete the annotation task myself.
					blockquote
						a(id="distribute-self-codes-button" class="subsection-open-button") I'd like a list of codes that I will send to the annotators myself.
					blockquote
						a(id="distribute-email-button" class="subsection-open-button") I'd like the server to email codes to the annotators automatically.		


			article#dataset.article-heading.not-scrolled-to
				h1 Administrator Account
				div.form-section
					p In order to keep track of the annotation and to easily download the data that has been annotated, please provide a username and password below. This will provide you with the ability to log in to the application through the homepage.
					form
						div.form-group
							label(for="input-project-name") Username*
							input(id="input-project-name" placeholder="Username" autofocus required)
						div.form-group(style="margin-top: -20px")
							label(for="input-project-name") Password*
							input(id="input-project-name" type="password" placeholder="")


			article#dataset.article-heading.not-scrolled-to
				h1 Submission
				div.form-section
					p Once you have completed the form, please click the submit button below to set up the project.
					form
						div.submit-row
							input(type="submit" value="Submit and create project")

			div(style="height: 600px")



block scripts
	script.

		



		// Scroll to headings when clicking on nav
		$($("#nav-setup-stages").children()).on("click", function() {
			$('html, body').animate({scrollTop: $($(".article-heading")[$(this).index()]).offset().top - 100}, 500);
		});

		$(document).on('scroll', function() {

			$(".article-heading.scrolled-to").each(function() {

			    if($(document).scrollTop()<$(this).position().top - 250){
			    	
			    	$(this).addClass("not-scrolled-to")
			    	$(this).removeClass("scrolled-to")

			    	$($("#nav-setup-stages").children()[$(this).index() - 1]).removeClass("scrolled-past")
			    	$($("#nav-setup-stages").children()[$(this).index()]).addClass("not-yet-started")
			       
			    }			

			})

			$(".article-heading.not-scrolled-to").each(function() {
			    if($(document).scrollTop()>=$(this).position().top - 250){
			    	
			    	$(this).removeClass("not-scrolled-to")
			    	$(this).addClass("scrolled-to")

			    	$($("#nav-setup-stages").children()[$(this).index() - 1]).addClass("scrolled-past")
			    	$($("#nav-setup-stages").children()[$(this).index()]).removeClass("not-yet-started")
			       
			    }


			})


		})




		$("#entity-categories-file-button").on("click", function() {
			$("#entity-categories-file").slideDown(500)
			$("#entity-categories-list").slideUp(500)

			$("#entity-categories-list-button").addClass("fade-out");			
			$("#entity-categories-file-button").removeClass("fade-out");
		});

		$("#entity-categories-list-button").on("click", function() {
			$("#entity-categories-list").slideDown(500)
			$("#entity-categories-file").slideUp(500)

			$("#entity-categories-file-button").addClass("fade-out");			
			$("#entity-categories-list-button").removeClass("fade-out");
		});





		$("#already-tokenized-data-button").on("click", function() {
			$("#already-tokenized-data").slideDown(500)
			$("#untokenized-data").slideUp(500)

			$("#untokenized-data-button").addClass("fade-out");			
			$("#already-tokenized-data-button").removeClass("fade-out");
		});

		$("#untokenized-data-button").on("click", function() {
			$("#untokenized-data").slideDown(500)
			$("#already-tokenized-data").slideUp(500)

			$("#already-tokenized-data-button").addClass("fade-out");
			$("#untokenized-data-button").removeClass("fade-out");
		});

		/*$("#actually-already-tokenized-data-button").on("click", function() {
			$("#untokenized-data").addClass("subsection-hidden");
			$("#already-tokenized-data-button").removeClass("fade-out");
			$("#already-tokenized-data-button").click()			
		});

		$("#actually-untokenized-data-button").on("click", function() {
			$("#already-tokenized-data").addClass("subsection-hidden");
			$("#untokenized-data-button").removeClass("fade-out");
			$("#untokenized-data-button").click()			
		});*/
		


	


	script.

		// Drag and drop code and css found here:
		// https://css-tricks.com/examples/DragAndDropFileUploading/

		'use strict';

		;( function( $, window, document, undefined )
		{
			// feature detection for drag&drop upload

			var isAdvancedUpload = function()
				{
					var div = document.createElement( 'div' );
					return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) && 'FormData' in window && 'FileReader' in window;
				}();


			// applying the effect for every form

			$( '.box' ).each( function()
			{
				var $form		 = $( this ),
					$input		 = $form.find( 'input[type="file"]' ),
					$label		 = $form.find( 'label' ),
					$errorMsg	 = $form.find( '.box__error span' ),
					$restart	 = $form.find( '.box__restart' ),
					droppedFiles = false,
					showFiles	 = function( files )
					{
						$label.text( files.length > 1 ? ( $input.attr( 'data-multiple-caption' ) || '' ).replace( '{count}', files.length ) : files[ 0 ].name );
					};

				// letting the server side to know we are going to make an Ajax request
				$form.append( '<input type="hidden" name="ajax" value="1" />' );

				// automatically submit the form on file select
				$input.on( 'change', function( e )
				{
					showFiles( e.target.files );

					
					$form.trigger( 'submit' );

					
				});


				// drag&drop files if the feature is available
				if( isAdvancedUpload )
				{
					$form
					.addClass( 'has-advanced-upload' ) // letting the CSS part to know drag&drop is supported by the browser
					.on( 'drag dragstart dragend dragover dragenter dragleave drop', function( e )
					{
						// preventing the unwanted behaviours
						e.preventDefault();
						e.stopPropagation();
					})
					.on( 'dragover dragenter', function() //
					{
						$form.addClass( 'is-dragover' );
					})
					.on( 'dragleave dragend drop', function()
					{
						$form.removeClass( 'is-dragover' );
					})
					.on( 'drop', function( e )
					{
						droppedFiles = e.originalEvent.dataTransfer.files; // the files that were dropped
						showFiles( droppedFiles );

						
						$form.trigger( 'submit' ); // automatically submit the form on file drop

						
					});
				}


				// if the form was submitted

		        var progressBar = $(this).find('.progress-bar-fill')
		        var progressPercent = $(this).find('.progress-percent-complete')

				$form.on( 'submit', function( e )
				{
					// preventing the duplicate submissions if the current one is in progress
					if( $form.hasClass( 'is-uploading' ) ) return false;

					$form.addClass( 'is-uploading' ).removeClass( 'is-error' );

					if( isAdvancedUpload ) // ajax file upload for modern browsers
					{
						e.preventDefault();

						// gathering the form data
						var ajaxData = new FormData( $form.get( 0 ) );
						if( droppedFiles )
						{
							$.each( droppedFiles, function( i, file )
							{
								ajaxData.append( $input.attr( 'name' ), file );
							});
						}

						console.log($form.attr( 'action' ))

						// ajax request
						$.ajax(
						{

							xhr: function() {
							var xhr = new window.XMLHttpRequest();

							xhr.upload.addEventListener("progress", function(evt) {
							  if (evt.lengthComputable) {
							    var percentComplete = evt.loaded / evt.total;
							    percentComplete = parseInt(percentComplete * 100);

							    progressBar.css("width", "" + percentComplete + "%")
							    progressPercent.html("" + percentComplete + "%")

							    if (percentComplete === 100) {

							    }

							  }
							}, false);

							return xhr;
							},						
							url: 			$form.attr( 'action' ),
							type:			$form.attr( 'method' ),
							data: 			ajaxData,
							dataType:		'json',
							cache:			false,
							contentType:	false,
							processData:	false,
							complete: function()
							{
								$form.removeClass( 'is-uploading' );
							},
							success: function( data )
							{
								$form.addClass( data.success == true ? 'is-success' : 'is-error' );
								if( !data.success ) $errorMsg.text( data.error );
							},
							error: function()
							{								
								alert( 'Error. Please, contact the webmaster!' );
							}
						});
					}
					else // fallback Ajax solution upload for older browsers
					{
						var iframeName	= 'uploadiframe' + new Date().getTime(),
							$iframe		= $( '<iframe name="' + iframeName + '" style="display: none;"></iframe>' );

						$( 'body' ).append( $iframe );
						$form.attr( 'target', iframeName );

						$iframe.one( 'load', function()
						{
							var data = $.parseJSON( $iframe.contents().find( 'body' ).text() );
							$form.removeClass( 'is-uploading' ).addClass( data.success == true ? 'is-success' : 'is-error' ).removeAttr( 'target' );
							if( !data.success ) $errorMsg.text( data.error );
							$iframe.remove();
						});
					}
				});


				// restart the form if has a state of error/success

				$restart.on( 'click', function( e )
				{
					e.preventDefault();
					$form.removeClass( 'is-error is-success' );
					$input.trigger( 'click' );
				});

				// Firefox focus bug fix for file input
				$input
				.on( 'focus', function(){ $input.addClass( 'has-focus' ); })
				.on( 'blur', function(){ $input.removeClass( 'has-focus' ); });
			});

		})( jQuery, window, document );
